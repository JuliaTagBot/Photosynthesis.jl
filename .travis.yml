## Documentation: http://docs.travis-ci.com/user/languages/julia/
language: julia
os:
  - linux
  - osx
julia:
  - 0.7
  - nightly
notifications:
  email: false
git:
  depth: 99999999

## uncomment the following lines to allow failures on nightly julia
## (tests will run but not make your overall status red)
# matrix:
  # allow_failures:
  # - julia: nightly

## uncomment and modify the following lines to manually install system packages
addons:
 apt: # apt-get for linux
   packages:
   - gfortran

before_script: # homebrew for mac
  - if [ $TRAVIS_OS_NAME = osx ]; then brew cask uninstall oclint; brew install gcc; fi

## uncomment the following lines to override the default test script
script:
  - git clone https://github.com/rafaqz/maespa.git
  - cd maespa
  - export MAESPA=$(pwd)
  - |
    if [ $TRAVIS_OS_NAME = linux ]; then
        gfortran -ffree-line-length-200 -shared -o2 maestcom.f90 -o maestcom.so -fpic; 
        gfortran -ffree-line-length-200 -shared -O2 metcom.f90 -o metcom.so -fPIC;
        gfortran -shared -O2 physiol.f90 -o physiol.so -fPIC;

    fi
  - |
    if [ $TRAVIS_OS_NAME = osx ]; then
        gfortran -ffree-line-length-200 -shared -o2 maestcom.f90 -o maestcom.dylib -fpic; 
        gfortran -ffree-line-length-200 -shared -O2 metcom.f90 -o metcom.dylib -fPIC;
        gfortran -shared -O2 physiol.f90 -o physiol.dylib -fPIC;

    fi
  - cd ..
  - julia -e 'using Pkg; Pkg.add(PackageSpec(url="https://github.com/rafaqz/FieldMetadata.jl.git")); Pkg.build("FieldMetadata")'
  - julia -e 'using Pkg; Pkg.add(PackageSpec(url="https://github.com/rafaqz/Nested.jl.git")); Pkg.build("Nested")'
  - julia -e 'using Pkg; Pkg.add(PackageSpec(url="https://github.com/rafaqz/Mixers.jl.git")); Pkg.build("Mixers")'
  - julia -e 'using Pkg; Pkg.add(PackageSpec(url="https://github.com/rafaqz/Defaults.jl.git")); Pkg.build("Defaults")'
  - julia -e 'using Pkg; Pkg.add(PackageSpec(url="https://github.com/rafaqz/Flatten.jl.git")); Pkg.build("Flatten")'
  - julia -e 'using Pkg; Pkg.add(PackageSpec(url=pwd())); Pkg.build("Photosynthesis"); Pkg.test("Photosynthesis"; coverage=true)'
after_success:
  # push coverage results to Coveralls
  - julia -e 'cd(Pkg.dir("Photosynthesis")); Pkg.add("Coverage"); using Coverage; Coveralls.submit(Coveralls.process_folder())'
  # push coverage results to Codecov
  - julia -e 'cd(Pkg.dir("Photosynthesis")); Pkg.add("Coverage"); using Coverage; Codecov.submit(Codecov.process_folder())'
  - julia -e 'Pkg.add("Documenter"); Pkg.checkout("Documenter")'
  - julia -e 'cd(Pkg.dir("Photosynthesis")); ENV["DOCUMENTER_DEBUG"] = "true"; include(joinpath("docs", "make.jl"))'
